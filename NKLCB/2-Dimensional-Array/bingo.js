// 빙고(시뮬레이션)
// 빙고 게임은 다음과 같은 방식으로 이루어진다.
// 먼저 아래와 같이 25개의 칸으로 이루어진 빙고판에 1부터 25까지 자연수를 한 칸에 하나씩 쓴다.
// 11 12 2 24 10
// 16 1 13 3 25
// 6 20 5 21 17
// 19 4 8 14 9
// 22 15 7 23 18
// 다음은 사회자가 부르는 수를 차례로 지워나간다. 예를 들어 5, 10, 7이 불렸다면 이 세 수를 지운 뒤 빙고판의 모습은 다음과 같다.
// 11 12 2 24 10
// 16 1 13 3 25
// 6 20 5 21 17
// 19 4 8 14 9
// 22 15 7 23 18
// 차례로 수를 지워가다가 같은 가로줄, 세로줄 또는 대각선 위에 있는 5개의 모든 수가 지워지는 경우 그 줄에 선을 긋는다.
// 이러한 선이 세 개 이상 그어지는 순간 ‘빙고’라고 외치는데 가장 먼저 ‘빙고’라고 외친 사람이 게임의 승자가 된다.
// 11 12 2 24 10
// 16 1 13 3 25
// 6 20 5 21 17
// 19 4 8 14 9
// 22 15 7 23 18
// 철수는 친구들과 빙고 게임을 하고 있다. 철수가 빙고판에 쓴 수들과 사회자가 부르는 수의 순서가 주어질 때, 
// 사회자가 몇 번째 수를 부른 후 철수가 ‘빙고’를 외치게 되는지를 출력하는 프로그램을 작성하시오.
// [2차원 배열탐색과 시뮬레이션]
// - 5 -
// ▣ 입력설명
// 매개변수 board에 빙고판에 쓰여진 수가 가장 위 가로줄부터 차례대로 한 줄에 다섯 개씩 주어진다.
// 매개변수 nums에 사회자가 부르는 수가 차례대로 주어진다. 빙고판에 쓰여진 수와 사회자가 부르는 수는 각각 1부터 25까지의 수가 한 번씩 사용된다.
// ▣ 출력설명
// 사회자가 몇 번째 수를 부른 후 철수가 ‘빙고’를 외치게 되는지 반환한다.
// ▣ 입력예제 1
// [[11, 12, 2, 24, 10], [16, 1, 13, 3, 25], [6, 20, 5, 21, 17], [19, 4, 8, 14, 9], [22, 15,
// 7, 23, 18]], [5, 10, 7, 16, 2, 4, 22, 8, 17, 13, 3, 18, 1, 6, 25, 12, 19, 23, 14, 21, 11,
// 24, 9, 20, 15]
// ▣ 출력예제 1
// 15

function solution(board, nums) {
    let answer = 0, sum = 0, num, s1, s2, s3, s4;
    let pos = Array.from(Array(2), ()=>Array(30).fill(0));
    let ch = Array.from(Array(5), ()=>Array(5).fill(0));
    
    for(let i = 0; i < 5; i++) {
        for(let j = 0; j < 5; j++) {
            num = board[i][j];
            pos[0][num] = i;
            pos[1][num] = j;
        }
    }
    for(let j = 0; j < nums.length; j++) {
        let x = nums[j];
        ch[pos[0][x]][pos[1][x]] = 1;
        s1 = s2 = s3 = s4 = 1;
        if(pos[0][x] === pos[1][x]) {
            for(let i = 0; i < 5; i++) {
                if(ch[i][i] === 0) s1=0;
            }
        }
        else s1=0;
        if(pos[0][x]+pos[1][x] === 4) {
            for(let i = 0; i < 5; i++) {
                if(ch[i][4-i] === 0) s2=0;
            }
        }
        else s2=0;
        for(let i = 0; i < 5; i++) {
            if(ch[pos[0][x]][i] === 0) s3=0;
            if(ch[i][pos[1][x]] === 0) s4=0;
        }
        sum += (s1+s2+s3+s4);
        if(sum >= 3) {
            answer = j+1;
            break;
        }
    }
    return answer;
}

console.log(solution([[11, 12, 2, 24, 10], [16, 1, 13, 3, 25], [6, 20, 5, 21, 17], [19, 4, 8, 14, 9], [22, 15,7, 23, 18]], 
    [5, 10, 7, 16, 2, 4, 22, 8, 17, 13, 3, 18, 1, 6, 25, 12, 19, 23, 14, 21, 11, 24, 9, 20, 15]));

    