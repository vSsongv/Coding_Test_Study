// 회의실 배정
// 한 개의 회의실이 있는데 이를 사용하고자 하는 n개의 회의들에 대하여 회의실 사용표를 만들려고 한다. 
// 각 회의에 대해 시작시간과 끝나는 시간이 주어져 있고, 각 회의가 겹치지 않게 하면서 회의실을 사용할 수 있는 최대수의 회의를 찾아라.
// 단, 회의는 한번 시작하면 중간에 중단될 수 없으며 한 회의가 끝나는 것과 동시에 다음 회의가 시작될 수 있다.
// ▣ 입력설명
// 매개변수 meeting에 N(1<=N<=200,000)개의 회의정보가 주어집니다. 회의의 시작시간과 끝나
// 는 시간이 같을 수 있습니다.
// ▣ 출력설명
// 최대 사용할 수 있는 회의 수를 반환합니다.
// ▣ 매개변수 형식 1
// [[1, 4], [2, 3], [3, 5], [4, 6], [5, 7]]
// ▣ 반환값 형식 1
// 3
// 예제설명
// (2, 3), (3, 5), (5, 7)이 회의실을 이용할 수 있다.

function solution(meeting) {
    let answer = 0;
    meeting.sort(function(a,b) {
        if(a[1] === b[1]) return a[0]-b[0]; //끝 시간이 같으면 오름차순 정렬 필요
        else return a[1]-b[1];
    });
    let endTime = 0;
    for(let t of meeting) {
        if(t[0] >= endTime) { //회의 시작시간이 앞 끝 시간보다 뒤라면
            answer += 1; //회의 가능
            endTime = t[1]; //끝나는 시간 갱신
        }
    }
    return answer; 
}

console.log(solution([[1, 4], [2, 3], [3, 5], [4, 6], [5, 7]]));