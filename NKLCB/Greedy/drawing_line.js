// 선긋기
// 현수는 수직선 위에 선을 그을려고 합니다. 
// 선을 그을 때에는 수직선상의 한 점에서 다른 한 점까지 긋게 된다.
// 선을 그을 때에는 이미 선이 있는 위치에 겹쳐서 그릴 수도 있는데, 
// 여러 번 그은 곳과 한 번 그은 곳의 차이를 구별할 수 없다고 하자.
// 이와 같은 식으로 선을 그었을 때, 현수가 그린 선(들)의 총 길이를 구하는 프로그램을 작성하시오.
// ▣ 입력설명
// 매개변수 nums에 N(5<=N<=200,000)개의 현수가 그은 선의 정보가 좌표(x, y)로 주어집니다.
// 선의 정보는 수직선상의 좌표인데 x는 선의 시작점이고, y는 선의 끝점입니다. (x<=y)
// ▣ 출력설명
// 선의 총 길이를 반환합니다.
// ▣ 매개변수 형식 1
// [[1, 3], [2, 5], [7, 10]]
// ▣ 반환값 형식 1
// 7
// ▣ 매개변수 형식 2
// [[5, 6], [1, 3], [7, 8], [9, 10]]
// ▣ 반환값 형식 2
// 5

function solution(nums) {
    let answer = 0;
    nums.sort((a,b) => a[0] - b[0]);
    let start = nums[0][0];
    let end = nums[0][1];
    for(let i = 1; i < nums.length; i++) {
        if(nums[i][0] <= end && nums[i][1] > end) { //앞의 구간과 겹친다면
            nums[i][0] = nums[i-1][0]; //현재 좌표의 x좌표만 바꿔줌
        }
        else if(nums[i][0] > end){ //겹치지 않는다면
            answer += (end-start); //asnwer에 앞의 구간 길이를 더해줌
            start = nums[i][0]; 
            end = nums[i][1];
        }
        //포함되는 경우 넘어가면 됨.
    }   
    answer += (end - start);
    return answer; //마지막 좌표값끼리의 길이 더해야 함
}

console.log(solution([[1, 3], [2, 5], [7, 10]]));
console.log(solution([[5, 6], [1, 3], [7, 8], [9, 10]]));